一、路由系统  URL
    1.url(r'^index/', views.index),  url(r'^index/', views.Index.as_view()),
    2.url(r'^detail-(\d+).html', views.detail),
    3.url(r'^detail-(?P<nid>\d+)-(?P<uid>\d+).html', views.detail)

            def detail(request, *args, **kwargs):
                pass
            def func(request,nid,uid):
                pass
            def func(request,**kwargs):
                kwarts = {'nid':1,'uid':3}

            def func(request,*args, **kwargs):
                args=(2,9)
    4.name
      对URL路由关系进行命名：**** 以后根据此名称生成想要的url *****

      url(r'^auv/', views.index, name='i1')
      url(r'^yug/(\d+)', views.index, name='i2')
      url(r'^buy/(?P<pid>\d+)/((?P<nid>\d+)/', views.index, name='i3')
          form表单中 action = {% url "i1" %}
          form表单中 action = {% url "i2" num %}
          form表单中 action = {% url "i2" 3 %} 一个\d+ 一个数字，多个\d+多个数字 空格分离
          form表单中 action = {% url "i2" 3 %}


      def func(request, *args, **kwargs):
        from django.urls import reverse
        url1 = reverse('i1')                            # auv/
        url2 = reverse('i2',args = (1,2,))              # yug/1/2/
        url3 = reverse('i3', kwargs={'pid':1,"nid":9}   # buy/1/9/

      xxx.html
        {% url "i1" %}                  # auv/
        {% url "i2" 1 2 %}              # yug/1/2/
        {% url "i3" nid=3 pid=4 %}      # buy/3/4/



        注：当前的url 获取
        request.path_info

    5. 路由分发


二：视图 views
    1.
        request.GET
        request.POST
        request.FILES
    2.
        # checkbox 等多选的内容
        request.POST.getList()
    3.
        # 上传文件 form 标签做特殊设置 enctype="multipart/form-data"
        obj = request.FILES.get('filename')
        file_path = os.path.join('upload',obj.name)
        print(file_path)
        f = open(obj.name,mode='wb)
        for item in obj.chunks():
            f.write(item)
        f.close()
    4.  FBV  & CBV
        FBV: function   base    view
        CBV: class  base    view

        FBV:
            urls.py
                index   -->     view.函数名
            view.py
                def 函数名(request):

        CBV
            urls.py
                index   -->     view.classname.as_view()
四： ORM操作
    select * from tb where id>1
    对应关系
    models.tb.objects.filter(id_gt=1)
    id=1
    models.tb.objects.filter(id=1)
    id>1
    models.tb.objects.filter(id_lt=1)

    创建类
    1、根据类自动创建数据库表
    2、根据类对数据库表中的数据进行各种操作